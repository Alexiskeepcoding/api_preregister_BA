// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Organization {
  id                Int               @id @default(autoincrement())
  address           Address?
  coordinates       Coordinates?
  representative    Representative?
  stateRegistration stateRegistration @default(PENDING)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  nameOrganization  NameOrganization?
  ruc               Ruc?
  phone             Phone?
  email             Email?
  purpose           Purpose?
  dependentsBenefit DependentsBenefit?
  motive            Motive?
  numPreRegister    NumPreRegister?
  certificates      Certificates?
}

model NameOrganization {
  id                 Int           @id @default(autoincrement())
  text               String
  state              Boolean
  organization       Organization? @relation(fields: [nameOrganizationId], references: [id])
  nameOrganizationId Int?          @unique
}

model Ruc {
  id           Int           @id @default(autoincrement())
  text         Int
  state        Boolean
  organization Organization? @relation(fields: [rucId], references: [id])
  rucId        Int           @unique
}

model Phone {
  id           Int           @id @default(autoincrement())
  text         String
  state        Boolean
  organization Organization? @relation(fields: [phoneId], references: [id])
  phoneId      Int           @unique
}

model Email {
  id           Int           @id @default(autoincrement())
  text         String
  state        Boolean
  organization Organization? @relation(fields: [emailId], references: [id])
  emailId      Int           @unique
}

model Purpose {
  id           Int           @id @default(autoincrement())
  text         String
  state        Boolean
  organization Organization? @relation(fields: [purposeId], references: [id])
  purposeId    Int           @unique
}

model DependentsBenefit {
  id                  Int           @id @default(autoincrement())
  text                Int
  state               Boolean
  organization        Organization? @relation(fields: [dependentsBenefitId], references: [id])
  dependentsBenefitId Int           @unique
}

model Motive {
  id           Int           @id @default(autoincrement())
  text         String
  state        Boolean
  organization Organization? @relation(fields: [motiveId], references: [id])
  motiveId     Int           @unique
}

model NumPreRegister {
  id               Int           @id @default(autoincrement())
  text             Int
  state            Boolean
  organization     Organization? @relation(fields: [numPreRegisterId], references: [id])
  numPreRegisterId Int           @unique
}

model Certificates {
  id             Int          @id @default(autoincrement())
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId Int          @unique

  iessCertificate     IESSCertification? @relation("IESScertification", fields: [iessCertificationId], references: [id])
  iessCertificationId Int?               @unique

  sriCertification   SRICertification? @relation("SRICertification", fields: [sriCertificationId], references: [id])
  sriCertificationId Int?              @unique
}

model IESSCertification {
  id           Int           @id @default(autoincrement())
  imageurl     String
  state        Boolean
  certificates Certificates? @relation("IESScertification")
  updatedat    DateTime      @updatedAt
}

model SRICertification {
  id           Int           @id @default(autoincrement())
  imageurl     String
  state        Boolean
  certificates Certificates? @relation("SRICertification")
  updatedat    DateTime      @updatedAt
}

model Address {
  id             Int          @id @default(autoincrement())
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId Int          @unique

  street       Street?
  city         City?
  neighborhood Neighborhood?
  province     Province?
  country      Country?
}

model Street {
  id       Int      @id @default(autoincrement())
  text     String
  state    Boolean
  address  Address? @relation(fields: [streetId], references: [id])
  streetId Int      @unique
}

model City {
  id      Int      @id @default(autoincrement())
  text    String
  state   Boolean
  address Address? @relation(fields: [cityId], references: [id])
  cityId  Int      @unique
}

model Neighborhood {
  id             Int      @id @default(autoincrement())
  text           String
  state          Boolean
  address        Address? @relation(fields: [neighborhoodId], references: [id])
  neighborhoodId Int      @unique
}

model Province {
  id         Int      @id @default(autoincrement())
  text       String
  state      Boolean
  address    Address? @relation(fields: [provinceId], references: [id])
  provinceId Int      @unique
}

model Country {
  id        Int      @id @default(autoincrement())
  text      String
  state     Boolean
  address   Address? @relation(fields: [countryId], references: [id])
  countryId Int      @unique
}

model Coordinates {
  id             Int           @id @default(autoincrement())
  latitude       String
  longitude      String
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId Int           @unique
}

model Representative {
  id             Int           @id @default(autoincrement())
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId Int           @unique

  name                Name?
  numDoc              NumDoc?
  role                Role?
  emailRepresentative EmailRepresentative?
  phoneRepresentative PhoneRepresentative?
}

model Name {
  id             Int             @id @default(autoincrement())
  text           String
  state          Boolean
  representative Representative? @relation(fields: [nameId], references: [id])
  nameId         Int             @unique
}

model NumDoc {
  id             Int             @id @default(autoincrement())
  text           String
  state          Boolean
  representative Representative? @relation(fields: [numDocId], references: [id])
  numDocId       Int             @unique
}

model Role {
  id             Int             @id @default(autoincrement())
  text           String
  state          Boolean
  representative Representative? @relation(fields: [roleId], references: [id])
  roleId         Int             @unique
}

model EmailRepresentative {
  id             Int             @id @default(autoincrement())
  text           String
  state          Boolean
  representative Representative? @relation(fields: [emailId], references: [id])
  emailId        Int             @unique
}

model PhoneRepresentative {
  id             Int             @id @default(autoincrement())
  text           String
  state          Boolean
  representative Representative? @relation(fields: [phoneId], references: [id])
  phoneId        Int             @unique
}

enum stateRegistration {
  PENDING
  REVIEW
  APPROVED
  REJECTED
}
