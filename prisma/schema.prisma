generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Organization {
  id                 Int               @id @default(autoincrement())
  addressId          Int               @unique
  coordinatesId      Int               @unique
  emailId            Int               @unique
  motiveId           Int               @unique
  nameOrganizationId Int               @unique
  numRegisterId      Int               @unique
  phoneId            Int               @unique
  purposeId          Int               @unique
  representativeId   Int               @unique
  rucId              Int               @unique
  stateRegistration  StateRegistration
  dependentBenefitId Int               @unique
  address            Address           @relation(fields: [addressId], references: [id], onDelete: Cascade)
  coordinates        Coordinates       @relation(fields: [coordinatesId], references: [id], onDelete: Cascade)
  dependentsBenefit  DependentsBenefit @relation(fields: [dependentBenefitId], references: [id], onDelete: Cascade)
  email              Email             @relation(fields: [emailId], references: [id], onDelete: Cascade)
  motive             Motive            @relation(fields: [motiveId], references: [id], onDelete: Cascade)
  nameOrganization   NameOrganization  @relation(fields: [nameOrganizationId], references: [id], onDelete: Cascade)
  numPreRegister     NumPreRegister    @relation(fields: [numRegisterId], references: [id], onDelete: Cascade)
  phone              Phone             @relation(fields: [phoneId], references: [id], onDelete: Cascade)
  purpose            Purpose           @relation(fields: [purposeId], references: [id], onDelete: Cascade)
  representative     Representative    @relation(fields: [representativeId], references: [id], onDelete: Cascade)
  ruc                Ruc               @relation(fields: [rucId], references: [id], onDelete: Cascade)
}

model NameOrganization {
  id           Int           @id @default(autoincrement())
  text         String
  state        Boolean
  organization Organization?
}

model Ruc {
  id          Int           @id @default(autoincrement())
  state       Boolean
  text        String
  organizaion Organization?
}

model Phone {
  id           Int           @id @default(autoincrement())
  text         String
  state        Boolean
  organization Organization?
}

model Email {
  id           Int           @id @default(autoincrement())
  text         String
  state        Boolean
  organization Organization?
}

model Purpose {
  id           Int           @id @default(autoincrement())
  text         String
  state        Boolean
  organization Organization?
}

model DependentsBenefit {
  id           Int           @id @default(autoincrement())
  text         Int
  state        Boolean
  organization Organization?
}

model Motive {
  id           Int           @id @default(autoincrement())
  text         String
  state        Boolean
  organization Organization?
}

model NumPreRegister {
  id           Int           @id @default(autoincrement())
  text         Int
  state        Boolean
  organization Organization?
}

model Address {
  id           Int           @id @default(autoincrement())
  city         City?
  country      Country?
  neighborhood Neighborhood?
  organization Organization?
  province     Province?
  street       Street?
}

model Street {
  id             Int     @id @default(autoincrement())
  text           String
  state          Boolean
  organizationId Int     @unique
  address        Address @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([id, organizationId])
}

model City {
  id             Int     @id @default(autoincrement())
  text           String
  state          Boolean
  organizationId Int     @unique
  address        Address @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([id, organizationId])
}

model Neighborhood {
  id             Int     @id @default(autoincrement())
  text           String
  state          Boolean
  organizationId Int     @unique
  address        Address @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([id, organizationId])
}

model Province {
  id             Int     @id @default(autoincrement())
  text           String
  state          Boolean
  organizationId Int     @unique
  address        Address @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([id, organizationId])
}

model Country {
  id             Int     @id @default(autoincrement())
  text           String
  state          Boolean
  organizationId Int     @unique
  address        Address @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([id, organizationId])
}

model Coordinates {
  id           Int           @id @default(autoincrement())
  latitude     String
  longitude    String
  organization Organization?
}

model Representative {
  id                  Int                  @id @default(autoincrement())
  emailRepresentative EmailRepresentative?
  name                Name?
  numDoc              NumDoc?
  organization        Organization?
  phoneRepresentative PhoneRepresentative?
  role                Role?
}

model Name {
  id             Int            @id @default(autoincrement())
  text           String
  state          Boolean
  organizationId Int            @unique
  representative Representative @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([id, organizationId])
}

model NumDoc {
  id             Int            @id @default(autoincrement())
  text           String
  state          Boolean
  organizationId Int            @unique
  representative Representative @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([id, organizationId])
}

model Role {
  id             Int            @id @default(autoincrement())
  text           String
  state          Boolean
  organizationId Int            @unique
  representative Representative @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([id, organizationId])
}

model EmailRepresentative {
  id             Int            @id @default(autoincrement())
  text           String
  state          Boolean
  organizationId Int            @unique
  representative Representative @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([id, organizationId])
}

model PhoneRepresentative {
  id             Int            @id @default(autoincrement())
  text           String
  state          Boolean
  organizationId Int            @unique
  representative Representative @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([id, organizationId])
}

enum StateRegistration {
  PENDING
  REVIEW
  APPROVED
  REJECTED
}
